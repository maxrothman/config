{
    //
    // Settings for built-in features
    //
    "editor.minimap.enabled": false, //This is distracting
    "workbench.startupEditor": "newUntitledFile",
    "editor.fontSize": 14, //This is the sidebar with files/git/debug/etc.
    "workbench.colorCustomizations": {
        //I'm colorblind
        "terminal.selectionBackground": "#80aeeb81",
        "terminal.ansiGreen": "#1df373",
        "editor.selectionHighlightBorder": "#657ed3",
        "editor.selectionBackground": "#2f4387",
        "editor.findMatchBackground": "#6d75e69f"
    },
    "editor.semanticTokenColorCustomizations": {
        "[Monokai]": {
            "rules": {
                // Terraform's default highlighter colors suck in monokai
                "hcl-blockType": "#66D9EF",
                "hcl-blockLabel.terraform-type": "#A6E22E",
                "hcl-blockLabel.terraform-name": "#FD971F"
            }
        }
    },
    "terminal.integrated.fontSize": 14, //I have astigmatism
    "workbench.colorTheme": "Monokai", //My sublime text is showing
    "diffEditor.renderSideBySide": false, //I prefer inline diffs
    "editor.find.autoFindInSelection": "multiline", //Enables select, then find-in-selection painlessly
    "editor.definitionLinkOpensInPeek": true, //Jumping makes it harder to read code
    "workbench.sideBar.location": "left", //Where else would you want it?
    "explorer.confirmDelete": false, //I never use vscode outside a git repo, deletes/moves are low-risk
    "explorer.confirmDragAndDrop": false,
    "explorer.sortOrder": "mixed",
    "window.newWindowDimensions": "maximized",
    "editor.guides.bracketPairs": "active",
    "editor.guides.bracketPairsHorizontal": false,
    "editor.stickyScroll.enabled": true,
    "files.exclude": {
        "**/__pycache__": true,
        "**/.stack-work": true,
        "**/.vscode": true
    },
    "explorer.excludeGitIgnore": true,
    "files.associations": {
        "*.bb": "clojure",
        "*.hcl": "terraform"
    },
    "terminal.integrated.tabs.enabled": true,
    "editor.wordWrapColumn": 100,
    "accessibility.signals.taskCompleted": {
        "sound": "on",
        "announcement": "auto"
    },
    "accessibility.signals.taskFailed": {
        "sound": "on",
        "announcement": "auto"
    },
    "terminal.integrated.scrollback": 5000,
    "diffEditor.hideUnchangedRegions.enabled": true,
    // 
    // EXTENSION/LANGUAGE-SPECIFIC SETTINGS
    // 
    // Sync Settings. VSCode's settings sync won't do plain ol' files
    "syncSettings.resources": [
        "keybindings",
        "settings",
        "snippets"
    ],
    //From rewrap plugin
    "rewrap.wrappingColumn": 100,
    "rewrap.autoWrap.enabled": true,
    // Markdown
    "markdown.extension.toc.updateOnSave": false,
    "[markdown]": {
        "editor.quickSuggestions": {
            "comments": "off",
            "strings": "off",
            "other": "off"
        },
        "editor.defaultFormatter": "yzhang.markdown-all-in-one"
    },
    //From Python plugin
    "python.REPL.sendToNativeREPL": true,
    "[python]": {
        // The outline is way too noisy without these. If only I could hide them from âŒ˜T...
        "outline.showModules": false,
        "outline.showVariables": false,
        "outline.showProperties": false,
        "editor.formatOnType": true,
    },
    // Javascript
    "[javascriptreact]": {
        "editor.tabSize": 2,
        // "editor.defaultFormatter": "esbenp.prettier-vscode",
    },
    "[javascript]": {
        "editor.tabSize": 2
    },
    "[jsonc]": {
        // This is necessary if prettier is installed and harmless if not
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    // Clojure
    "[clojure]": {
        "editor.wordSeparators": "`~!@#$%^&*()=+[{]}\\|;:'\",.<>/?",
        "editor.tabSize": 2,
        // I kind of prefer these to the ones from calva, they're more visually clear
        "editor.guides.bracketPairs": "active",
        "editor.bracketPairColorization.enabled": true,
        "editor.guides.bracketPairsHorizontal": true
    },
    "calva.highlight.enableBracketColors": false,
    "calva.paredit.defaultKeyMap": "strict",
    "calva.showCalvaSaysOnStart": false,
    "calva.prettyPrintingOptions": {
        "printEngine": "pprint",
        "enabled": true,
        "width": 50,
        "maxLength": 50
    },
    // I found the default style wasn't visually clear enough
    "calva.highlight.matchedBracketStyle": {
        "borderWidth": "1px",
        "borderStyle": "solid",
        "borderColor": "#b3b3b3"
    },
    "calva.useLegacyReplWindowPath": false,
    "calva.autoOpenInspector": false,
    // Spell checker
    "cSpell.enabledFileTypes": {
        "*": true
    },
    "cSpell.diagnosticLevel": "Hint",
    "cSpell.userWords": [
        "authn",
        "authz",
        "butlast",
        "cond",
        "datasource",
        "datasources",
        "defmacro",
        "defmethod",
        "defmulti",
        "defn",
        "defrecords",
        "deftype",
        "doall",
        "doseq",
        "fnil",
        "jdbc",
        "juxt",
        "mapcat",
        "mapv",
        "vals",
        "zipmap"
    ],
    "[html]": {
        "editor.defaultFormatter": "vscode.html-language-features"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "[git-commit]": {
        "editor.rulers": [
            50,
            72
        ],
        "editor.wordWrap": "off",
        "workbench.editor.restoreViewState": false,
        "rewrap.wrappingColumn": 72,
        "rewrap.autoWrap.enabled": true,
    },
    "[typescript]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "redhat.telemetry.enabled": false,
    // 
    // Copilot junk
    "github.copilot.enable": {
        // Even when it's installed, it should be disabled by default
        "*": false,
        "plaintext": false,
        "markdown": false,
        "scminput": false,
        "git-commit": false
    },
    "inlineChat.lineNaturalLanguageHint": false,
    "disable-copilot-comment-completions.textMateRules": [
        {
            "type": "string",
            "value": "comment",
            "mode": "includes"
        }
    ],
    "chat.commandCenter.enabled": false
}